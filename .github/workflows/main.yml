# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  api-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      working-directory: ./api
    
    strategy:
      matrix:
        node-version: [10.x, 12.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
      working-directory: ${{ env.working-directory }}
    - run: npm run build --if-present
      working-directory: ${{ env.working-directory }}
    - run: npx eslint .
      working-directory: ${{ env.working-directory }}
    - run: npm test
      working-directory: ${{ env.working-directory }}
  frontend-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: [10.x, 12.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
      working-directory: ${{ env.working-directory }}
    - run: npm run prod --if-present
      working-directory: ${{ env.working-directory }}
    - run: npx eslint .
      working-directory: ${{ env.working-directory }}
    - run: npm test
      working-directory: ${{ env.working-directory }}
    - name: Build and Deploy
      uses: ./.github/actions/deploy
      env:
        COMMIT_EMAIL: b.vandenbroeck1@student.avans.nl
        ACCESS_TOKEN: ${{ secret.ACCES_TOKEN }}
        BASE_BRANCH: master
        DEPLOY_BRANCH: master
        BUILD_SCRIPT: npm install && npm run prod
        FOLDER: dist
